管理(符合这些约束(非标准,可灵活调整)):
    - yaml:记录所有; 问题记录,yaml格式(差异分析,对比), 总结优化,快/慢, 原因
    - 想要的,得到的-- 权重,轻重缓急
    - 未知的
    - 需求, 是可以更好满足, 更快的船-3D投影观看
    -   领域的,16参数(复杂参数 多领域  领域更加丰富,包容性多): 类似Python 多参数;分支 场景;复用,更多场景
    -   效率:
            - 困难度分析与解决     eg:kafka新版本
            - 合作 指导与指引
            - 经验 eg, 造车, 四个轮子 + 美观... 可以有N方法,达标与更好,(未知的需求),    最优方案-自己想出来的方案，网上更好的方案, 经验, 类似场景, 确定是正确的
            - 依赖精确度, 精确度不是完全准确,有误差;
            - 强行指挥-- 没有明显的优点
            - 专人技术点,两人主副备份??  已用 全面 稳定的功能, 顺序, 不可逾越, 挑战,名与职合, 专一,工具
            - 多环境, 快速开发, 拓展
            - 易于理解的,分析的, 面向人的
            - 分类- 当数量足够多时, 不在以用途,关联 分类到一起;
    - 阶段推进, 紧密关联的一起
    -   避免的:
            - 冲动,拍脑袋决定
            - 强行指挥
    -   技巧:
            - 情感- 收买 武力
            - 需求分析, 开发文档,版本管理,上线部署,代码审查
            - 情感 聚餐
            - 客户交流? 例行会议?
            - 招人，文化，
            - 对比，
            -   调整,换一种组合:
                    - 人员 部门间 借用
                    - 直升机吹风化电线上雪
            - 更好,抄袭学习
            - 规则可以打破的 一个人登记 直接取走救人设备 替代签证
            - 非空想，写出来，慢慢迭代修改
            - 经验套用  做不到原因  曾经xxx
            - 混乱源自未掌握 练习
            - 类似提建议，向别人，有收益。需求
            - 争取资源, 推动, 想要的结果
            - 喜欢考虑细化场景,复杂化逻辑
            - 不是你死我亡的胜利,只是斩断侵略双手的胜利
            - 话不能全信, eg:看着好年轻;没有头绪的话;不符合事实的话;具有决定因素的人的话,随便说点好话
